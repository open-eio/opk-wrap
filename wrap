#!/usr/bin/env python

import sys, os, argparse, glob, json, urllib2,select
from collections import OrderedDict

LOGFILE     = sys.stderr
IN_STREAM   = sys.stdin
OUT_STREAM  = sys.stdout

MODE = 'READ' #default to reading

# check to see if we are in 'READ' or 'WRITE' mode:

#if select.select([sys.stdin,],[],[],0.0)[0]:
#    MODE = 'WRITE' 
#else:
#    MODE = 'READ' 

funnelpath="./funnelfile"

# parse the command line arguments
parser = argparse.ArgumentParser()

# need to revise to make 'write' and 'read' mutually exclusive options ...
#parser.add_argument("-f","--funnelfile", help="specify the named pipe file")
parser.add_argument("-s","--syntax", help="syntax: (JSON,default), where default=CSV")
parser.add_argument("-k","--key", help="the key for the JSON packet", required=True)
#parser.add_argument("-r","--read", help="read from named pipe file")

# verbose
parser.add_argument("-v", "--verbose", action="store_true", help="increase output verbosity")

args = parser.parse_args()

# modify the funnel file path if desired

#if args.funnelfile:
#    funnelpath=args.funnelfile

if (args.syntax == 'JSON' or args.syntax == 'json' or args.syntax==None):
    OUT_STREAM.write("{")
    OUT_STREAM.write("\"")
    OUT_STREAM.write(args.key)
    OUT_STREAM.write("\":")
    for line in IN_STREAM:
        a=line.split("\n")
        OUT_STREAM.write(a[0])
    OUT_STREAM.write("}")
LOGFILE.close()
IN_STREAM.close()
OUT_STREAM.close()
